@startuml





/' Objects '/

class CLIHandler {
	+CLIHandler(OrderBook& orderBook)
	-orderBook_ : OrderBook&
	+isValidDouble(std::string value) : bool
	+isValidInt(std::string value) : bool
	+isValidSide(std::string side) : bool
	+parseArguments(std::string command) : std::vector<std::string>
	+displayHelp() : void
	+handleBest() : void
	+handleCancel(std::vector<std::string> tokens) : void
	+handleIcebergOrder(std::vector<std::string> tokens) : void
	+handleLimitOrder(std::vector<std::string> tokens) : void
	+handleMarketOrder(std::vector<std::string> tokens) : void
	+handleMarketSpread() : void
	+handleStopLimitOrder(std::vector<std::string> tokens) : void
	+handleStopOrder(std::vector<std::string> tokens) : void
	+handleViewOrder(std::vector<std::string> tokens) : void
	+run() : void
}


class Order {
	-Order(OrderType orderType, Side side, OrderId orderId, Price price, Price stopPrice, Quantity initialQuantity)
	+{static} CreateLimitOrder(Side side, OrderId orderId, Price price, Quantity initialQuantity) : Order
	+{static} CreateMarketOrder(Side side, OrderId orderId, Quantity initialQuantity) : Order
	+{static} CreateStopLimitOrder(Side side, OrderId orderId, Price stopPrice, Price limitPrice, Quantity initialQuantity) : Order
	+{static} CreateStopOrder(Side side, OrderId orderId, Price stopPrice, Quantity initialQuantity) : Order
	+getOrderId() : OrderId
	-orderId_ : OrderId
	+getOrderType() : OrderType
	-orderType_ : OrderType
	+getPrice() : Price
	+getStopPrice() : Price
	-price_ : Price
	-stopPrice_ : Price
	-filledQuantity_ : Quantity
	+getFilledQuantity() : Quantity
	+getInitialQuantity() : Quantity
	+getRemainingQuantity() : Quantity
	-initialQuantity_ : Quantity
	+getSide() : Side
	-side_ : Side
	+fill(Quantity quantity) : void
}


class OrderBook {
	-asks_ : Asks
	-bids_ : Bids
	-currentOrderId_ : OrderId
	+nextOrderId() : OrderId
	+getBestAskOrder() : OrderPointer
	+getBestBidOrder() : OrderPointer
	+viewOrder(OrderId orderId) : OrderPointer
	-orders_ : Orders
	+getMarketPrice() : Price
	+getMarketSpread() : Price
	+getAskQuantityAtLevel(Price price) : Quantity
	+getBidQuantityAtLevel(Price price) : Quantity
	+clear() : void
	+getBookSnapshot() : void
	+matchOrders() : void
	+printAsks() : void
	+printBids() : void
	+printOrders() : void
	+removeOrder(OrderId orderId) : void
	+submitOrder(Order order) : void
}


enum OrderType {
	LIMIT
	MARKET
	STOP_LIMIT
	STOP_MARKET
}


enum Side {
	BUY
	SELL
}


class Constants {
	+{static} NoPrice : double
}





/' Inheritance relationships '/




/' Aggregation relationships '/

CLIHandler *-- OrderBook


Order *-- OrderType


Order *-- Side






/' Nested objects '/



@enduml
